// <auto-generated />
using System;
using DataAccessLayer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataAccessLayer.Entity.Admin", b =>
                {
                    b.Property<string>("AdminID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdminID");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("DataAccessLayer.Entity.Contractor", b =>
                {
                    b.Property<string>("ContractorID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContractorID");

                    b.ToTable("Contractors");
                });

            modelBuilder.Entity("DataAccessLayer.Entity.JobCode", b =>
                {
                    b.Property<int>("JobCodeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobCodeID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("HourlyRate")
                        .HasColumnType("float");

                    b.Property<string>("JobCodeName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("MaxHoursPerDay")
                        .HasColumnType("int");

                    b.HasKey("JobCodeID");

                    b.ToTable("JobCodes");
                });

            modelBuilder.Entity("DataAccessLayer.Entity.LaborEntry", b =>
                {
                    b.Property<int>("LaborEntryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LaborEntryID"));

                    b.Property<int>("HrsWorked")
                        .HasColumnType("int");

                    b.Property<string>("JobCodeName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("TimesheetID")
                        .HasColumnType("int");

                    b.Property<double>("TotalAmount")
                        .HasColumnType("float");

                    b.HasKey("LaborEntryID");

                    b.HasIndex("TimesheetID");

                    b.ToTable("LaborEntries");
                });

            modelBuilder.Entity("DataAccessLayer.Entity.MachineCode", b =>
                {
                    b.Property<int>("MachineCodeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MachineCodeID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MachineCodeName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("MaxHoursPerDay")
                        .HasColumnType("int");

                    b.Property<double>("UsageRate")
                        .HasColumnType("float");

                    b.HasKey("MachineCodeID");

                    b.ToTable("MachineCodes");
                });

            modelBuilder.Entity("DataAccessLayer.Entity.MachineEntry", b =>
                {
                    b.Property<int>("MachineEntryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MachineEntryID"));

                    b.Property<int>("HrsUsed")
                        .HasColumnType("int");

                    b.Property<string>("MachineCodeName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("TimesheetID")
                        .HasColumnType("int");

                    b.Property<double>("TotalAmount")
                        .HasColumnType("float");

                    b.HasKey("MachineEntryID");

                    b.HasIndex("TimesheetID");

                    b.ToTable("MachineEntries");
                });

            modelBuilder.Entity("DataAccessLayer.Entity.Timesheet", b =>
                {
                    b.Property<int>("TimesheetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TimesheetID"));

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<string>("ContractorID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SubmitedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TimesheetID");

                    b.ToTable("Timesheets");
                });

            modelBuilder.Entity("DataAccessLayer.Entity.LaborEntry", b =>
                {
                    b.HasOne("DataAccessLayer.Entity.Timesheet", null)
                        .WithMany("LaborEntries")
                        .HasForeignKey("TimesheetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccessLayer.Entity.MachineEntry", b =>
                {
                    b.HasOne("DataAccessLayer.Entity.Timesheet", null)
                        .WithMany("MachineEntries")
                        .HasForeignKey("TimesheetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccessLayer.Entity.Timesheet", b =>
                {
                    b.Navigation("LaborEntries");

                    b.Navigation("MachineEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
